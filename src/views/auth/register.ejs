<section class="auth-panel">
  <h2 class="auth-title">Register</h2>
  <div id="auth-error" class="auth-error hidden"></div>
  <div id="auth-success" class="auth-success hidden"></div>
  <form id="registerForm" class="auth-form">
    <label class="auth-label">Email
      <input class="auth-input" id="email" type="email" autocomplete="email" required />
    </label>
    <label class="auth-label">Password
      <span class="password-field">
        <input class="auth-input" id="password" type="password" minlength="6" autocomplete="new-password" required />
        <button type="button" id="togglePwd" class="toggle-password" aria-label="Show password">
          <svg class="icon-eye" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7S1 12 1 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="2"/></svg>
          <svg class="icon-eye-off hidden" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M17.94 17.94A10.94 10.94 0 0 1 12 20c-7 0-11-8-11-8a21.8 21.8 0 0 1 5.06-6.94M9.9 4.24A10.94 10.94 0 0 1 12 4c7 0 11 8 11 8a21.76 21.76 0 0 1-3.2 4.2M3 3l18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>
        </button>
      </span>
    </label>
    <label class="auth-label">Confirm Password
      <input class="auth-input" id="confirm" type="password" minlength="6" autocomplete="new-password" required />
    </label>
    <button class="auth-button" id="submitBtn" type="submit">Create account</button>
  </form>
  <p class="auth-alt">Have an account? <a href="/auth/login">Login</a></p>
</section>
<script type="module">
  const cfg = <%- JSON.stringify(firebaseConfig) %>;
  const errBox = document.getElementById('auth-error');
  const submitBtn = document.getElementById('submitBtn');
  function showErr(msg){ errBox.textContent = msg; errBox.classList.remove('hidden'); }
  function clearErr(){ errBox.classList.add('hidden'); }
  if(!cfg || !cfg.apiKey){ showErr('Firebase not configured. Set env vars.'); }
  else {
    import('https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js').then(({initializeApp})=>{
      return Promise.all([
        Promise.resolve(initializeApp(cfg)),
        import('https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js')
      ]);
    }).then(([app, authMod])=>{
      const { getAuth, createUserWithEmailAndPassword } = authMod;
      const auth = getAuth();

      document.getElementById('togglePwd').addEventListener('click', ()=>{
        const i = document.getElementById('password');
        const btn = document.getElementById('togglePwd');
        const eye = btn.querySelector('.icon-eye');
        const eyeOff = btn.querySelector('.icon-eye-off');
        if(i.type === 'password'){
          i.type='text'; btn.setAttribute('aria-label','Hide password'); eye.classList.add('hidden'); eyeOff.classList.remove('hidden');
        } else {
          i.type='password'; btn.setAttribute('aria-label','Show password'); eye.classList.remove('hidden'); eyeOff.classList.add('hidden');
        }
      });

      document.getElementById('registerForm').addEventListener('submit', async (e)=>{
        e.preventDefault(); clearErr(); submitBtn.disabled = true;
        const email = document.getElementById('email').value.trim();
        const password = document.getElementById('password').value;
        const confirm = document.getElementById('confirm').value;
        if(password !== confirm){ showErr('Passwords do not match'); submitBtn.disabled=false; return; }
        try {
          const cred = await createUserWithEmailAndPassword(auth, email, password);
          const idToken = await cred.user.getIdToken();
          const res = await fetch('/auth/session', { method:'POST', headers:{'Content-Type':'application/json'}, credentials:'include', body: JSON.stringify({ idToken }) });
          if (!res.ok) throw new Error('Session creation failed');
          window.location.href = '/dashboard';
        } catch (e) { showErr((e && (e.code || e.message)) || 'Registration failed'); }
        finally { submitBtn.disabled = false; }
      });
    }).catch(()=>showErr('Failed to load Firebase.'));
  }
</script>
