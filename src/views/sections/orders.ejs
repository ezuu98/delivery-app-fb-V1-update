<section class="rider-commissions">
  <header class="rc-header">
    <h2 class="rc-title">Order Management</h2>
    <p class="rc-subtitle">Manage orders synced from Shopify.</p>
  </header>

  <div class="rc-toolbar">
    <div class="rc-search">
      <span class="rc-search-icon" aria-hidden="true"></span>
      <input id="ordersSearch" class="rc-search-input" type="search" placeholder="Search" />
    </div>
    <div class="rc-filters">
      <button class="rc-select rc-chip" data-filter="all">All</button>
      <button class="rc-select rc-chip" data-filter="new">New</button>
      <button class="rc-select rc-chip" data-filter="assigned">Assigned</button>
      <button class="rc-select rc-chip" data-filter="in-transit">In Transit</button>
      <button class="rc-select rc-chip" data-filter="delivered">Delivered</button>
    </div>
  </div>

  <% if (!shopifyConfigured) { %>
    <div class="section-note">Shopify is not configured. Set SHOPIFY_SHOP and SHOPIFY_ADMIN_TOKEN to enable orders sync.</div>
  <% } %>
  <% if (shopifyError) { %>
    <div class="auth-error"><%= shopifyError %></div>
  <% } %>

  <div class="rc-table-wrapper">
    <table class="rc-table" id="ordersTable">
      <thead>
        <tr>
          <th class="col-name">Order #</th>
          <th class="col-km">Customer</th>
          <th class="col-perf">Address</th>
          <th class="col-comm">Status</th>
          <th class="col-comm">Time Placed</th>
          <th class="col-comm">Action</th>
        </tr>
      </thead>
      <tbody>
        <% (orders || []).forEach(o => {
             const fname = (o.customer && (o.customer.first_name || ''));
             const lname = (o.customer && (o.customer.last_name || ''));
             const addr = (o.shipping_address && ((o.shipping_address.address1||'') + ' ' + (o.shipping_address.city||'') + (o.shipping_address.province?(', '+o.shipping_address.province):'') + (o.shipping_address.country?(', '+o.shipping_address.country):''))) || '-';
             let status = 'new';
             if (Array.isArray(o.tags) && o.tags.join(',').toLowerCase().includes('assigned')) status = 'assigned';
             else if (o.fulfillment_status === 'fulfilled') status = 'delivered';
             else if (o.fulfillment_status === 'partial') status = 'in-transit';
             const action = status === 'new' ? 'Assign' : status === 'assigned' ? 'View' : status === 'in-transit' ? 'Track' : 'Details';
        %>
          <tr data-status="<%= status %>">
            <td class="rc-col-name">#<%= o.name || o.order_number || o.id %></td>
            <td class="rc-col-km"><%= (fname||'') + (lname?(' ' + lname):'') %></td>
            <td class="rc-col-perf"><%= addr %></td>
            <td class="rc-col-commission"><span class="status-chip status-<%= status %>"><%= status.replace('-', ' ') %></span></td>
            <td class="rc-col-commission"><%= new Date(o.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %></td>
            <td class="rc-col-commission"><a href="#" class="order-action" data-action="<%= action.toLowerCase() %>"><%= action %></a></td>
          </tr>
        <% }) %>
        <% if (!orders || orders.length === 0) { %>
          <tr><td colspan="6" class="section-note">No orders to display.</td></tr>
        <% } %>
      </tbody>
    </table>
  </div>
</section>

<script>
  (function(){
    const rows = Array.from(document.querySelectorAll('#ordersTable tbody tr'));
    const search = document.getElementById('ordersSearch');
    const tabs = Array.from(document.querySelectorAll('.rc-filters [data-filter]'));

    function matches(row){
      const q = (search.value||'').toLowerCase().trim();
      if(q){
        const text = row.textContent.toLowerCase();
        if(!text.includes(q)) return false;
      }
      const active = (tabs.find(t=>t.classList.contains('active'))||{dataset:{filter:'all'}}).dataset.filter;
      if(active !== 'all' && row.dataset.status !== active) return false;
      return true;
    }

    function apply(){ rows.forEach(r=>{ r.style.display = matches(r) ? '' : 'none'; }); }

    search.addEventListener('input', apply);
    tabs.forEach(t=> t.addEventListener('click', ()=>{ tabs.forEach(b=>b.classList.remove('active')); t.classList.add('active'); apply(); }));
    if(tabs[0]) tabs[0].classList.add('active');
  })();
</script>
